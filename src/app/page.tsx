"use client";
// External
import { useState, useReducer, useEffect } from "react";

// Internal
import styles from "./page.module.css";

import { StateContext, StateDispatchContext } from "./components/stateContext";
import reducer, { getCurrentDate } from "./components/reducer";
import stampCollectionData from "./data/stampCollectionData";
import rewardCollectionData from "./data/rewardCollectionData";

import { State, Task } from "@/app/types";
import React from "react";
import TopLayout from "./components/layout/topLayout";
import BotLayout from "./components/layout/botLayout";

const initialState: State = {
	nmt: 0,
	nmtStart: 0,
	stampCollection: stampCollectionData,
	rewardCollection: rewardCollectionData,
	taskCollection: [],
	lastSeen: getCurrentDate(),
};

// TODO
// TASK MORPH ANIMATION

export default function Home() {
	const [state, dispatch] = useReducer(reducer, initialState);

	const [selectedTask, setSelectedTask] = useState<Task | null>(null);
	const [isTaskClicked, setIsTaskClicked] = useState(false);

	// const [isLoaded, setIsLoaded] = useState(false);

	// useEffect(() => {
	// 	console.log("?? is loaded");
	//     setIsLoaded(true);
	// }, []);

	return (
		<StateContext.Provider value={state}>
			<StateDispatchContext.Provider value={dispatch}>
				<main className={styles.main}>
					<TopLayout
						selectedTask={selectedTask}
						setSelectedTask={setSelectedTask}
						isTaskClicked={isTaskClicked}
						setIsTaskClicked={setIsTaskClicked}
					></TopLayout>
					<BotLayout
						selectedTask={selectedTask}
						isTaskClicked={isTaskClicked}
					></BotLayout>
				</main>
			</StateDispatchContext.Provider>
		</StateContext.Provider>
	);
}

{
	/* <svg width="233.5" height="248" viewBox="0 0 233.5 248">
						<path fill="#f6f1dc">
							<animate
								attributeName="d"
								dur="10000ms"
								repeatCount="indefinite"
								values="M223,94.5c0-26.9238892-11.7954254-49.0488892-30.9431381-64.4429169S146.4091492,6,117,6,60.8408508,14.6630554,41.4431381,30.0570831,10,67.5761108,10,94.5c0,7.8598671,1.027493,16.1625884,2.9649674,24.6116235s4.7849301,17.0443838,8.4248556,25.4895057c1.923788,4.4634497,3.0609895,9.18856,3.4303029,13.9785382s-.0292611,9.644824-1.1770251,14.3677449c-1.170014,4.8144772-2.0807892,9.2145388-2.6990609,13.0925238s-.9440399,7.2338933-.9440399,9.960064c0,18.5015259,14.9992371,30.0015259,34.6238556,36.8761444s43.8746185,9.1238556,62.3761444,9.1238556,42.7515259-2.2492371,62.3761444-9.1238556,34.6238556-18.3746185,34.6238556-36.8761444c0-2.8603146-.3592094-6.414672-1.0387987-10.5381664s-1.6795586-8.8161258-2.9610783-13.9529884c-1.1376013-4.5599779-1.5376048-9.2509516-1.1985088-13.8853142s1.4172914-9.2121143,3.2360878-13.545648c3.5103791-8.3639634,6.2509536-16.8690953,8.1139333-25.2279058s2.8483646-16.5712995,2.8483646-24.3499771Z;
                                M223,76c0-26.9238892-11.7954254-44.4238892-30.9431381-55.1929169s-45.6477127-14.8070831-75.0568619-14.8070831S60.8408508,14.6630554,41.4431381,30.0570831,10,67.5761108,10,94.5c0,7.8598671,1.027493,16.1625884,2.9649674,24.6116235s4.7849301,17.0443838,8.4248556,25.4895057c1.923788,4.4634497,3.0609895,9.18856,3.4303029,13.9785382s-.0292611,9.644824-1.1770251,14.3677449c-1.170014,4.8144772-2.5807892,12.7145388-3.6990609,20.0925238s-1.9440399,14.2338933-1.9440399,16.960064c0,18.5015259,15.4992371,26.5015259,35.6238556,29.8761444s44.8746185,2.1238556,63.3761444,2.1238556,42.7515259-2.2492371,62.3761444-9.1238556,34.6238556-18.3746185,34.6238556-36.8761444c0-2.8603146-.3592094-6.414672-1.0387987-10.5381664s-1.6795586-8.8161258-2.9610783-13.9529884c-1.1376013-4.5599779-1.5376048-9.2509516-1.1985088-13.8853142s1.4172914-9.2121143,3.2360878-13.545648c3.5103791-8.3639634,6.2509536-21.4940953,8.1139333-34.4779058s2.8483646-25.8212995,2.8483646-33.5999771Z;
                                M222,105c0-26.9238892-11.5454254-51.6738892-30.4431381-69.6929169S146.4091492,6,117,6s-56.6591492,2.7880554-76.5568619,12.3070831S8,44.0761108,8,71c0,7.8598671,1.527493,22.0375884,3.9649674,36.3616235s5.7849301,28.7943838,9.4248556,37.2395057c1.923788,4.4634497,3.0609895,9.18856,3.4303029,13.9785382s-.0292611,9.644824-1.1770251,14.3677449c-1.170014,4.8144772-2.0807892,7.9645388-2.6990609,10.5925238s-.9440399,4.7338933-.9440399,7.460064c0,18.5015259,14.9992371,31.2515259,34.6238556,39.3761444s43.8746185,11.6238556,62.3761444,11.6238556,42.7515259,1.2507629,62.3761444-2.1238556,34.6238556-11.3746185,34.6238556-29.8761444c0-2.8603146-.3592094-9.914672-1.0387987-17.5381664s-1.6795586-15.8161258-2.9610783-20.9529884c-1.1376013-4.5599779-1.5376048-9.2509516-1.1985088-13.8853142s1.4172914-9.2121143,3.2360878-13.545648c3.5103791-8.3639634,6.0009536-14.2440953,7.6139333-19.9779058s2.3483646-11.3212995,2.3483646-19.0999771Z;
                                
                                M223,94.5c0-26.9238892-11.7954254-49.0488892-30.9431381-64.4429169S146.4091492,6,117,6,60.8408508,14.6630554,41.4431381,30.0570831,10,67.5761108,10,94.5c0,7.8598671,1.027493,16.1625884,2.9649674,24.6116235s4.7849301,17.0443838,8.4248556,25.4895057c1.923788,4.4634497,3.0609895,9.18856,3.4303029,13.9785382s-.0292611,9.644824-1.1770251,14.3677449c-1.170014,4.8144772-2.0807892,9.2145388-2.6990609,13.0925238s-.9440399,7.2338933-.9440399,9.960064c0,18.5015259,14.9992371,30.0015259,34.6238556,36.8761444s43.8746185,9.1238556,62.3761444,9.1238556,42.7515259-2.2492371,62.3761444-9.1238556,34.6238556-18.3746185,34.6238556-36.8761444c0-2.8603146-.3592094-6.414672-1.0387987-10.5381664s-1.6795586-8.8161258-2.9610783-13.9529884c-1.1376013-4.5599779-1.5376048-9.2509516-1.1985088-13.8853142s1.4172914-9.2121143,3.2360878-13.545648c3.5103791-8.3639634,6.2509536-16.8690953,8.1139333-25.2279058s2.8483646-16.5712995,2.8483646-24.3499771Z;"
							></animate>
						</path>
					</svg> */
}
